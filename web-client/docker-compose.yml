# Docker Compose配置文件
version: '3.8'

services:
  # Web客户端服务
  web-client:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: three-kingdoms-web-client:latest
    container_name: three-kingdoms-web
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8080/api}
      - WS_BASE_URL=${WS_BASE_URL:-ws://localhost:8080/ws}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - three-kingdoms-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.web-client.rule=Host(`your-domain.com`)'
      - 'traefik.http.routers.web-client.entrypoints=websecure'
      - 'traefik.http.routers.web-client.tls.certresolver=myresolver'
      - 'traefik.http.services.web-client.loadbalancer.server.port=8080'

  # Nginx反向代理（可选）
  nginx-proxy:
    image: nginx:alpine
    container_name: three-kingdoms-proxy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - web-client
    networks:
      - three-kingdoms-network
    profiles:
      - proxy

  # Redis缓存（可选）
  redis:
    image: redis:alpine
    container_name: three-kingdoms-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - three-kingdoms-network
    profiles:
      - cache

  # 监控服务（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: three-kingdoms-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - three-kingdoms-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: three-kingdoms-grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - three-kingdoms-network
    profiles:
      - monitoring

# 网络配置
networks:
  three-kingdoms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷
volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
